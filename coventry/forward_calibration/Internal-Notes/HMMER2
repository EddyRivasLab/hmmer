HMMER 2
November 1996

A complete rewrite of the original 1992-1996 HMMER code, the plan for
Version 2 of HMMER includes the following new features:

- A new model architecture (called "Plan 7" for obscure reasons)
    - D->I and I->D transitions are now disallowed to
       circumvent the alignment chatter problem.
    - full probabilistic Smith/Waterman and local alignment is
       an integral part of the HMM, not an ad hoc addition.
    - The null model is also fully probabilistic, including a length
       distribution.

- Built-in support for the PFAM protein family database, including
  names attached to HMMs, and database searches against HMM libraries.

- Protein HMMs now incorporate structural information, when available,
  using special mixture Dirichlets conditioned on structural parameters.

- P-values and E-values are estimated from extreme value distributions 
  in large database searches, supplementing Bayesian log-odds scores
  and (in principle) increasing sensitivity.

- Mixture Dirichlets are now the default prior on protein HMMs.

- Database searches now sort and postprocess their results for
  prettier and more useful output.

- HMM BLAST algorithm implemented in collaboration with W. Gish.

- "hmmest" searches EST sequences with protein HMMs, doing a
  six-frame frameshift-tolerant, substitution-tolerant on the fly
  translation, combining three probabilistic models of the protein, ABI/phred
  sequencing errors, and genetic code/codon bias.

- "hmmgenome" searches accurate large-scale genome sequence, doing
  a six-frame frameshift-tolerant, substitution-tolerant on the fly
  translation, combining three probabilistic models of the protein, 
  intron/exon structure, and genetic code/codon bias.

- Important published algorithms (ours, Krogh/Haussler's, whoevers)
  are written in both unoptimized "research" forms and optimized
  "production" forms. HMMER previously heavily optimized for
  production use, which hindered research and development.

- HMMER save files are now in a single ASCII format which
  is easy for humans to read, portable across all architectures
  without byteswapping issues, and compact enough to obviate
  the need for the old binary formats.

- a firm policy of publishing our algorithms in a timely manner 
  instead of sitting on them lazily (!)

