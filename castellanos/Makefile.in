################################################################# 
# HMMER
# Main project directory: installation, documentation
# SVN $Id$


# On most Unices, you can build the package without modifying anything 
#   by just typing "./configure; make".


# Post-configuration, you may still want to modify the following make variables:
#   BINDIR  - where the executables will be installed by a 'make install'
#   MANDIR  - where the man pages will be installed by a 'make install'
#   CC      - which compiler to use
#   CFLAGS  - compiler flags to use
#
# We generally follow GNU coding standards here. ${prefix} might be /usr/local.
# ${exec_prefix} gives you some flexibility for installing architecture
# dependent files (e.g. the programs): an example ${exec_prefix} might be
# /nfs/share/irix64/
#
# You can also provide DESTDIR from the commandline, for installation
# in a buildroot; for example:
#     make DESTDIR=~/rpm/tmp/buildroot install
# By default, DESTDIR is null.
# This was added by request (rousse@ccr.jussieu.fr), to support 
# packaging of an official Mandrake Linux contrib RPM.
#
prefix      = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
BINDIR      = @bindir@
MANDIR      = @mandir@

# how to install the man pages; 
# cp is generally fine, unless you preformat your pages.
#
INSTMAN   = cp
MANSUFFIX = 1

# your compiler and compiler flags
#
CC     = @CC@
CFLAGS = @CFLAGS@

#######
## You should not need to modify below this line.
## Much of it is concerned with maintenance of the development version
## and building the release (indeed, several commands will only work in 
## St. Louis)
#######
SHELL       = /bin/sh

# The program lists below for HMMER are not necessarily
# a complete manifest. They are the list of stable programs that the
# package will install. There must be a man page for each one of them
# in the appropriate places (documentation/man for HMMER)
#
PROGS = hmmalign\
	hmmbuild\
	hmmcalibrate\
	hmmconvert\
	hmmemit\
	hmmfetch\
	hmmindex\
	hmmpfam\
	hmmsearch

PVMPROGS = @PVMPROGS@


# all: Compile everything.
#
all:   
	@ if test -d binaries; then\
	  echo "This appears to be a binary distribution; nothing needs to be compiled." ; \
          echo "Use make install to install the precompiled binaries." ; \
	  echo "If you really want to rebuild from source, move or delete the" ;\
	  echo "binaries/ subdirectory."; \
	else\
	  (cd easel;     ${MAKE});\
	  (cd src;       ${MAKE});\
	fi


dev:
	cd easel; ${MAKE}
	cd src;   ${MAKE} dev

# check: compiles and runs test suite in testsuite/
#       These are public tests, distributed with the package.
#
check:	
	(cd testsuite; make check)

src/libhmmer.a: 
	cd src; ${MAKE} libhmmer.a


# install: installs the binaries in BINDIR/
#          installs man pages in MANDIR/man1/  (e.g. if MANSUFFIX is 1)
#          Creates these directories if they don't exist.
#          Prefix those paths with ${DESTDIR} (rarely used, usually null;
#          may be set on a make command line when building contrib RPMs).
install: 
	mkdir -p ${DESTDIR}/${BINDIR}
	-mkdir -p ${DESTDIR}/${MANDIR}/man${MANSUFFIX}
	for file in $(PROGS) $(PVMPROGS); do\
	   cp src/$$file ${DESTDIR}/$(BINDIR)/;\
	done
	-for file in hmmer $(PROGS); do\
	   $(INSTMAN) documentation/man/$$file.man ${DESTDIR}/$(MANDIR)/man$(MANSUFFIX)/$$file.$(MANSUFFIX);\
	done

# uninstall: Reverses the steps of "make install".
#
uninstall: 
	for file in $(PROGS) $(PVMPROGS); do\
	   rm ${BINDIR}/$$file;\
	done
	for file in hmmer $(PROGS); do\
	   rm $(MANDIR)/man$(MANSUFFIX)/$$file.$(MANSUFFIX);\
	done

# bindist: after building, prep the whole directory for a binary
#          distribution: symlink supported binaries in binaries/
#          subdir, remove everything but binaries and Makefiles.
#
bindist:
	mkdir binaries
	for prog in ${PROGS} ${PVMPROGS}; do\
	   (cd binaries; ln -s ../src/$$prog .);\
	done
	make binclean

# "make clean" removes almost everything except configuration files.
#
#	(cd src;       make clean)
clean:
	if test -d src;       then (cd src;       make clean); fi
	if test -d easel;     then (cd easel;     make clean); fi
	if test -d profmark;  then (cd profmark;  make clean); fi
	if test -d testsuite; then (cd testsuite; make clean); fi
	-rm -f *.o *~ Makefile.bak core TAGS gmon.out

# "make distclean" leaves a pristine source distribution.
#
#	(cd src;       make distclean)
distclean:
	-rm -rf binaries
	-rm config.log config.status
	-rm -rf autom4te.cache
	-rm -f *.o *~ Makefile.bak core TAGS gmon.out
	if test -d src;       then (cd src;       make distclean); fi
	if test -d easel;     then (cd easel;     make distclean); fi
	if test -d profmark;  then (cd profmark;  make distclean); fi
	if test -d testsuite; then (cd testsuite; make distclean); fi
	-rm LICENSE.csh
	-rm Makefile

# "make binclean" is special: it cleans up and leaves only a binary
#       distribution behind, including configured Makefiles.
#
#	(cd src;       make binclean)
binclean:
	if test -d src;       then (cd src;       make binclean); fi
	if test -d easel;     then (cd easel;     make binclean); fi
	if test -d profmark;  then (cd profmark;  make binclean); fi
	if test -d testsuite; then (cd testsuite; make binclean); fi
	-rm -f *.o *~ Makefile.bak core TAGS gmon.out
	-rm config.log config.status
	-rm -rf autom4te.cache

# doc:  build the Userguide and on-line manual
#
doc:
	(cd documentation/userguide; make)


# make optcheck:
#    Check that all program options are documented in man pages,
#    and tested in sqc scripts, by running ssdk's checkoptions.pl 
#    script on each program. 
#    
optcheck:
	@echo Checking options for consistency and documentation...
	@for prog in $(PROGS); do\
	   ssdk/checkoptions.pl src/$$prog documentation/man/$$prog.man testsuite/exercises.sqc testsuite/exercises-threaded.sqc testsuite/exercises-pvm.sqc;\
	done


tags:
	etags src/*.c src/*.h Makefile.in
	etags -a src/impl_sse/*.c src/impl_sse/*.h src/impl_sse/Makefile.in
	etags -a src/impl_vmx/*.c src/impl_vmx/*.h src/impl_vmx/Makefile.in
	(cd easel; etags -a -o ../TAGS *.c *.h *.tex documentation/*.tex miniapps/*.c miniapps/*.man Makefile.in)


###########
# @LICENSE@
###########
