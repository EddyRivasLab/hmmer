# Makefile for HMMER: Source directory
# RCS $Id$
##########
# @LICENSE@
###########

## your compiler and compiler flags
#
CC     = @CC@
CFLAGS = @CFLAGS@

## machine specific definitions
#
MDEFS = @MDEFS@ @DEFS@

## archiving command, and ranlib command if you need one.
#  In general, you shouldn't need to change these, and they're
#  only used for building the Shiva testsuite anyway.
#
AR     = ar rcv 
RANLIB = @RANLIB@

# Configuration for PVM functionality
#
PVMFLAG   = @PVMFLAG@
PVMLIBDIR = @PVMLIBDIR@
PVMINCDIR = @PVMINCDIR@
PVMLIBS   = @PVMLIBS@
PVMPROGS  = @PVMPROGS@

#######
## Neither you nor configure should not need to modify below this line
#######
SHELL  = /bin/sh
LIBS   = @LIBS@

PROGS = hmmalign hmmbuild hmmcalibrate \
	hmmconvert hmmemit hmmfetch hmmindex\
	hmmpfam hmmsearch

SQUIDPROGS = alistat getseq seqstat sreformat

HDRS =  config.h funcs.h globals.h structs.h version.h

SQUIDHDRS = gnuregex.h squid.h sqfuncs.h 

SRC =   hmmalign.c      hmmbuild.c        hmmcalibrate.c    hmmcalibrate-pvm.c\
	hmmconvert.c    hmmfetch.c        hmmindex.c        hmmpfam.c\
	hmmpfam-pvm.c hmmsearch.c       hmmsearch-pvm.c\
	alphabet.c    core_algorithms.c debug.c           emit.c\
	emulation.c   histogram.c       hmmio.c           mathsupport.c\
        masks.c       misc.c            modelmakers.c     plan7.c\
	plan9.c	      prior.c           pvm.c             threads.c\
	tophits.c     trace.c

SQUIDSRC = aligneval.c  alignio.c   cluster.c   dayhoff.c\
	   file.c       getopt.c    gsi.c       hsregex.c   interleaved.c\
	   iupac.c      msf.c       revcomp.c   selex.c\
	   sqerror.c    sqio.c      sre_ctype.c sre_math.c\
	   sre_string.c stack.c     translate.c types.c\
	   weight.c

OBJ =  	alphabet.o    core_algorithms.o debug.o	          emit.o\
	emulation.o   histogram.o       hmmio.o           mathsupport.o\
        masks.o       misc.o            modelmakers.o     plan7.o\
	plan9.o       prior.o           threads.o         tophits.o\
	trace.o

SQUIDOBJ = aligneval.o   alignio.o         cluster.o         dayhoff.o\
	   file.o        getopt.o          gsi.o             hsregex.o\
	   interleaved.o\
	   iupac.o       msf.o             revcomp.o         selex.o\
	   sqerror.o     sqio.o            sre_ctype.o       sre_math.o\
	   sre_string.o  stack.o           translate.o       types.o\
	   weight.o

PVMOBJ = pvm.o

.c.o:
	$(CC) $(CFLAGS) $(MDEFS) $(PTHREADFLAG) $(PVMFLAG) $(PVMINCDIR) -c $<		

#######
## Targets defining how to make HMMER executables.
#######

all: 	$(PROGS) $(SQUIDPROGS) $(PVMPROGS)


hmmalign: $(OBJ) $(SQUIDOBJ) hmmalign.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmalign.o $(OBJ) $(SQUIDOBJ) $(LIBS)
hmmbuild: $(OBJ) $(SQUIDOBJ) hmmbuild.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmbuild.o $(OBJ) $(SQUIDOBJ) $(LIBS)
hmmcalibrate: $(OBJ) $(SQUIDOBJ) $(PVMOBJ) hmmcalibrate.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmcalibrate.o $(OBJ) $(SQUIDOBJ) $(PVMOBJ) $(PVMLIBS) $(LIBS) 
hmmconvert: $(OBJ) $(SQUIDOBJ) hmmconvert.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmconvert.o $(OBJ) $(SQUIDOBJ) $(LIBS) 
hmmemit: $(OBJ) $(SQUIDOBJ) hmmemit.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmemit.o $(OBJ) $(SQUIDOBJ) $(LIBS) 
hmmfetch: $(OBJ) $(SQUIDOBJ) hmmfetch.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR)  -o $@ hmmfetch.o $(OBJ) $(SQUIDOBJ) $(LIBS) 
hmmindex: $(OBJ) $(SQUIDOBJ) hmmindex.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmindex.o $(OBJ) $(SQUIDOBJ) $(LIBS) 
hmmpfam: $(OBJ) $(SQUIDOBJ) $(PVMOBJ) hmmpfam.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmpfam.o $(OBJ) $(SQUIDOBJ) $(PVMOBJ) $(PVMLIBS) $(LIBS) 
hmmsearch: $(OBJ) $(SQUIDOBJ) $(PVMOBJ) hmmsearch.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmsearch.o $(OBJ) $(SQUIDOBJ) $(PVMOBJ) $(PVMLIBS) $(LIBS)

hmmcalibrate-pvm: $(OBJ) $(SQUIDOBJ) $(PVMOBJ) hmmcalibrate-pvm.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmcalibrate-pvm.o $(OBJ) $(SQUIDOBJ) $(PVMOBJ) $(PVMLIBS) $(LIBS)
hmmpfam-pvm: $(OBJ) $(SQUIDOBJ) $(PVMOBJ) hmmpfam-pvm.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmpfam-pvm.o $(OBJ) $(SQUIDOBJ) $(PVMOBJ) $(PVMLIBS) $(LIBS)
hmmsearch-pvm: $(OBJ) $(SQUIDOBJ) $(PVMOBJ) hmmsearch-pvm.o
	$(CC) $(CFLAGS) $(MDEFS) $(PVMLIBDIR) -o $@ hmmsearch-pvm.o $(OBJ) $(SQUIDOBJ) $(PVMOBJ) $(PVMLIBS) $(LIBS)

alistat:   $(SQUIDOBJ) alistat_main.o
	$(CC) $(CFLAGS) $(MDEFS) -o $@ alistat_main.o   $(SQUIDOBJ) $(LIBS)
getseq:    $(SQUIDOBJ) getseq_main.o
	$(CC) $(CFLAGS) $(MDEFS) -o $@ getseq_main.o    $(SQUIDOBJ) $(LIBS)
seqstat:   $(SQUIDOBJ) seqstat_main.o
	$(CC) $(CFLAGS) $(MDEFS) -o $@ seqstat_main.o   $(SQUIDOBJ) $(LIBS)
sreformat: $(SQUIDOBJ) sreformat_main.o
	$(CC) $(CFLAGS) $(MDEFS) -o $@ sreformat_main.o $(SQUIDOBJ) $(LIBS)

#######
## Target used in making Shiva test suite
#######

libhmmer.a: $(OBJ) $(SQUIDOBJ)
	$(AR) libhmmer.a $(OBJ) $(SQUIDOBJ)
	-if test -x /bin/ranlib; then /bin/ranlib libhmmer.a; else exit 0; fi
	-if test -x /usr/bin/ranlib; then /usr/bin/ranlib libhmmer.a; else exit 0; fi
	-if test -x $(RANLIB); then $(RANLIB) libhmmer.a; else exit 0; fi
	chmod 644 libhmmer.a


#######
## Targets defining different build styles;
#######

# Make a "production" copy
prodv:
	make clean
	make CFLAGS="-O2" MDEFS="" LIBS="-lm"

# Make a debugging copy
dbv:
	make clean	
	make CFLAGS="-g -Wall -pedantic" MDEFS="" LIBS="-lm"

# Make a memory debugging copy
memv: 
	make clean	
	make CFLAGS="-g -Wall" MDEFS="-DHMMER_THREADS -DDEBUGLEVEL=1 -DMEMDEBUG -L." LIBS="-lm -lpthread -ldbmalloc"


# Make an Electric Fence version
efencev:
	make clean
	make CFLAGS="-g -Wall" MDEFS="-DHMMER_THREADS -DDEBUGLEVEL=1" LIBS="-lm -lpthread -lefence"

# Make a gprof version
gprofv:
	make clean
	make CFLAGS="-pg" MDEFS="" LIBS="-lm" 


#######
## Miscellaneous
#######

clean:
	-rm -f *.o *~ Makefile.bak core $(PROGS) $(SQUIDPROGS) $(PVMPROGS) TAGS gmon.out libhmmer.a

tags:
	etags -t $(SRC) $(HDRS) $(READMES) 

lint:
	lint $(MDEFS) $(SRC) 


