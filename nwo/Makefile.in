PROGS = hmmer

SQCLEVEL = 2

OBJS   = \
	cmd_build.o           \
	cmd_kiteline.o        \
	cmd_statsim.o         \
	h4_anchorhash.o       \
	h4_anchorset.o        \
	h4_checkptmx.o        \
	h4_counts.o           \
	h4_envset.o           \
	h4_filtermx.o         \
	h4_hmmfile.o          \
	h4_mode.o             \
	h4_mpas.o             \
	h4_path.o             \
	h4_prior.o            \
	h4_profile.o          \
	h4_refmx.o            \
	h4_sparsemask.o       \
	h4_sparsemx.o         \
	ascmx.o               \
	build.o               \
	calibrate.o           \
	emit.o                \
	eweight.o             \
	fbfilter.o            \
	general.o             \
	logsum.o              \
	modelsample.o         \
	modelstats.o          \
	parameterize.o        \
	reference_aec.o       \
	reference_asc.o       \
	reference_dp.o        \
	reference_envelopes.o \
	reference_mpas.o      \
	seqmodel.o            \
	simdvec.o             \
	sparse_dp.o           \
	ssvfilter.o           \
	standardize.o         \
	vectorize.o           \
	vitfilter.o           \
	zigar.o

SSE4_OBJS   = fbfilter_sse.o    ssvfilter_sse.o    vitfilter_sse.o    simdvec_sse.o
AVX_OBJS    = fbfilter_avx.o    ssvfilter_avx.o    vitfilter_avx.o    simdvec_avx.o
AVX512_OBJS = fbfilter_avx512.o ssvfilter_avx512.o vitfilter_avx512.o simdvec_avx512.o
NEON_OBJS   = fbfilter_neon.o   ssvfilter_neon.o   vitfilter_neon.o
VMX_OBJS    = fbfilter_vmx.o    ssvfilter_vmx.o    vitfilter_vmx.o

HDRS = \
	h4_config.h           \
	h4_anchorhash.h       \
	h4_anchorset.h        \
	h4_checkptmx.h        \
	h4_counts.h           \
	h4_envset.h           \
	h4_filtermx.h         \
	h4_hmmfile.h          \
	h4_mode.h             \
	h4_mpas.h             \
	h4_path.h             \
	h4_prior.h            \
	h4_profile.h          \
	h4_refmx.h            \
	h4_sparsemask.h       \
	h4_sparsemx.h         \
	ascmx.h               \
	build.h               \
	calibrate.h           \
	emit.h                \
	eweight.h             \
	fbfilter.h            \
	general.h             \
	logsum.h              \
	modelsample.h         \
	modelstats.h          \
	parameterize.h        \
	reference_aec.h       \
	reference_asc.h       \
	reference_dp.h        \
	reference_envelopes.h \
	reference_mpas.h      \
	seqmodel.h            \
	simdvec.h             \
	sparse_dp.h           \
	ssvfilter.h           \
	standardize.h         \
	vectorize.h           \
	vitfilter.h           \
	zigar.h


UTESTS = \
	h4_anchorhash_utest       \
	h4_hmmfile_utest          \
	h4_mode_utest             \
	h4_path_utest             \
	h4_profile_utest          \
	h4_sparsemask_utest       \
	fbfilter_utest            \
	logsum_utest              \
	modelsample_utest         \
	reference_aec_utest       \
	reference_asc_utest       \
	reference_dp_utest        \
	reference_envelopes_utest \
	sparse_dp_utest           \
	ssvfilter_utest           \
	vitfilter_utest           \
	zigar_utest

STATS  =

EXPERIMENTS = \
	build_experiment           \
	build_experiment2          \
	reference_aec_experiment   \
	reference_aec_experiment2

BENCHMARKS = \
	fbfilter_benchmark      \
	logsum_benchmark        \
	reference_dp_benchmark  \
	ssvfilter_benchmark     \
	vitfilter_benchmark     \

EXAMPLES = \
	h4_anchorhash_example       \
	h4_hmmfile_example          \
	h4_path_example             \
	h4_sparsemask_example       \
	calibrate_example           \
	emit_example                \
	fbfilter_example            \
	logsum_example              \
	modelsample_example         \
	reference_aec_example       \
	reference_asc_example       \
	reference_dp_example        \
	reference_envelopes_example \
	reference_mpas_example      \
	seqmodel_example            \
	sparse_dp_example           \
	ssvfilter_example           \
	vitfilter_example           \
	zigar_example


top_srcdir     = @top_srcdir@
top_builddir   = @top_builddir@
srcdir         = @srcdir@
VPATH          = @srcdir@
SHELL          = /bin/sh

prefix         = @prefix@
exec_prefix    = @exec_prefix@
datarootdir    = @datarootdir@
bindir         = @bindir@
libdir         = @libdir@
includedir     = @includedir@

CC             = @CC@
CFLAGS         = @CFLAGS@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
SSE4_CFLAGS    = @SSE4_CFLAGS@
AVX_CFLAGS     = @AVX_CFLAGS@
AVX512_CFLAGS  = @AVX512_CFLAGS@
NEON_CFLAGS    = @NEON_CFLAGS@
VMX_CFLAGS     = @VMX_CFLAGS@
CPPFLAGS       = @CPPFLAGS@
LDFLAGS        = @LDFLAGS@
DEFS           = @DEFS@
LIBS           = -lhmmer -leasel @LIBS@ -lm

AR             = @AR@
RANLIB         = @RANLIB@
INSTALL        = @INSTALL@

# in MYINCDIRs, we have build dirs first, because headers generated by
# ./configure (p7_config.h, esl_config.h) are in build dirs, not
# source dirs; and we want to find these first (in case an errant one is
# in the source tree). All other headers are in the source tree.
#
MYLIBDIRS    = -L${top_builddir}/easel \
               ${LIBTMPDIR} \
               -L${top_builddir}/nwo
MYINCDIRS    = -I${top_builddir}/easel \
	       -I${top_builddir}/nwo \
	       -I${top_srcdir}/easel \
	       -I${top_srcdir}/nwo
MYLIBDEPS    = ${LIBTMPDEP} ${top_builddir}/nwo/libhmmer.a ${top_builddir}/easel/libeasel.a 



# beautification magic stolen from git 
QUIET_SUBDIR0 = +${MAKE} -C #space separator after -c
QUIET_SUBDIR1 = 
ifndef V
	QUIET_CC      = @echo '    ' CC $@;
	QUIET_GEN     = @echo '    ' GEN $@;
	QUIET_AR      = @echo '    ' AR $@;
	QUIET_SUBDIR0 = +@subdir=
	QUIET_SUBDIR1 = ; echo '    ' SUBDIR $$subdir; \
		        ${MAKE} -C $$subdir
	QUIET         = @
endif

ALL_OBJS        = ${OBJS}       ${SSE4_OBJS}       ${AVX_OBJS}       ${AVX512_OBJS}       ${NEON_OBJS}       ${VMX_OBJS}
ALL_UTESTS      = ${UTESTS}     ${SSE4_UTESTS}     ${AVX_UTESTS}     ${AVX512_UTESTS}     ${NEON_UTESTS}     ${VMX_UTESTS}
ALL_EXPERIMENTS = ${EXPERIMENTS}
ALL_STATS       = ${STATS}      ${SSE4_STATS}      ${AVX_STATS}      ${AVX512_STATS}      ${NEON_STATS}      ${VMX_STATS}
ALL_BENCHMARKS  = ${BENCHMARKS} ${SSE4_BENCHMARKS} ${AVX_BENCHMARKS} ${AVX512_BENCHMARKS} ${NEON_BENCHMARKS} ${VMX_BENCHMARKS}
ALL_EXAMPLES    = ${EXAMPLES}   ${SSE4_EXAMPLES}   ${AVX_EXAMPLES}   ${AVX512_EXAMPLES}   ${NEON_EXAMPLES}   ${VMX_EXAMPLES}


${SSE4_OBJS}:         SIMD_CFLAGS:= $(SSE4_CFLAGS)     
${AVX_OBJS}:          SIMD_CFLAGS:= $(AVX_CFLAGS)     
${AVX512_OBJS}:       SIMD_CFLAGS:= $(AVX512_CFLAGS)  
${NEON_OBJS}:         SIMD_CFLAGS:= $(NEON_CFLAGS)    
${VMX_OBJS}:          SIMD_CFLAGS:= $(VMX_CFLAGS)     

${SSE4_UTESTS}:       SIMD_CFLAGS:= $(SSE4_CFLAGS)     
${AVX_UTESTS}:        SIMD_CFLAGS:= $(AVX_CFLAGS)     
${AVX512_UTESTS}:     SIMD_CFLAGS:= $(AVX512_CFLAGS)  
${NEON_UTESTS}:       SIMD_CFLAGS:= $(NEON_CFLAGS)    
${VMX_UTESTS}:        SIMD_CFLAGS:= $(VMX_CFLAGS)     

${SSE4_STATS}:        SIMD_CFLAGS:= $(SSE4_CFLAGS)     
${AVX_STATS}:         SIMD_CFLAGS:= $(AVX_CFLAGS)     
${AVX512_STATS}:      SIMD_CFLAGS:= $(AVX512_CFLAGS)  
${NEON_STATS}:        SIMD_CFLAGS:= $(NEON_CFLAGS)    
${VMX_STATS}:         SIMD_CFLAGS:= $(VMX_CFLAGS)     

${SSE4_BENCHMARKS}:   SIMD_CFLAGS:= $(SSE4_CFLAGS)     
${AVX_BENCHMARKS}:    SIMD_CFLAGS:= $(AVX_CFLAGS)     
${AVX512_BENCHMARKS}: SIMD_CFLAGS:= $(AVX512_CFLAGS)  
${NEON_BENCHMARKS}:   SIMD_CFLAGS:= $(NEON_CFLAGS)    
${VMX_BENCHMARKS}:    SIMD_CFLAGS:= $(VMX_CFLAGS)     

${SSE4_EXAMPLES}:     SIMD_CFLAGS:= $(SSE4_CFLAGS)     
${AVX_EXAMPLES}:      SIMD_CFLAGS:= $(AVX_CFLAGS)     
${AVX512_EXAMPLES}:   SIMD_CFLAGS:= $(AVX512_CFLAGS)  
${NEON_EXAMPLES}:     SIMD_CFLAGS:= $(NEON_CFLAGS)    
${VMX_EXAMPLES}:      SIMD_CFLAGS:= $(VMX_CFLAGS)     

.PHONY: all dev tests install uninstall distclean clean tags-append
.FORCE:

all:    ${PROGS} 

dev:    ${PROGS} ${UTESTS} ${EXPERIMENTS} ${STATS} ${BENCHMARKS} ${EXAMPLES}

tests:  ${PROGS} ${UTESTS} 

# Programs build from their .c's directly. They are not included in libhmmer.a.
${PROGS}: % : %.c  libhmmer.a ${HDRS}
	${QUIET_GEN}${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -o $@ $< ${LIBS}

# All other object code is included in libhmmer.a.
libhmmer.a: ${ALL_OBJS}
	${QUIET_AR}${AR} -r libhmmer.a $? > /dev/null 2>&1 
	@${RANLIB} libhmmer.a

${ALL_OBJS}:  %.o : %.c ${HDRS} 
	${QUIET_CC}${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} -c $<

${ALL_EXAMPLES}: libhmmer.a ${top_builddir}/easel/libeasel.a ${HDRS} h4_config.h
	@BASENAME=`echo $@ | sed -e 's/_example[0-9]*//' | sed -e 's/^h4_//'` ;\
	DFLAG=h4`echo $@ | sed -e 's/^h4_//' | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`;\
	if test -e ${srcdir}/h4_$${BASENAME}.c    ;\
	   then DFILE=${srcdir}/h4_$${BASENAME}.c ;\
	   else DFILE=${srcdir}/$${BASENAME}.c    ;\
	fi;\
	if test ${V} ;\
	   then echo "${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}" ;\
	   else echo '    ' GEN $@ ;\
        fi ;\
	${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}

${ALL_BENCHMARKS}: libhmmer.a ${top_builddir}/easel/libeasel.a ${HDRS} h4_config.h
	@BASENAME=`echo $@ | sed -e 's/_benchmark[0-9]*//' | sed -e 's/^h4_//'` ;\
	DFLAG=h4`echo $@ | sed -e 's/^h4_//' | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`;\
	if test -e ${srcdir}/h4_$${BASENAME}.c    ;\
	   then DFILE=${srcdir}/h4_$${BASENAME}.c ;\
	   else DFILE=${srcdir}/$${BASENAME}.c    ;\
	fi;\
	if test ${V} ;\
	   then echo "${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}" ;\
	   else echo '    ' GEN $@ ;\
        fi ;\
	${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}

${ALL_UTESTS}: libhmmer.a  ${top_builddir}/easel/libeasel.a ${HDRS} h4_config.h
	@BASENAME=`echo $@ | sed -e 's/_utest//' | sed -e 's/^h4_//'` ;\
	DFLAG=`echo $${BASENAME} | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`;\
	DFLAG=h4$${DFLAG}_TESTDRIVE ;\
	if test -e ${srcdir}/h4_$${BASENAME}.c; then \
           DFILE=${srcdir}/h4_$${BASENAME}.c ;\
        else \
           DFILE=${srcdir}/$${BASENAME}.c ;\
	fi;\
	if test ${V} ;\
	   then echo "${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}" ;\
	   else echo '    ' GEN $@ ;\
        fi ;\
	${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}

${ALL_EXPERIMENTS}: libhmmer.a  ${top_builddir}/easel/libeasel.a ${HDRS} h4_config.h
	@BASENAME=`echo $@ | sed -e 's/_experiment[0-9]*//' | sed -e 's/^h4_//'` ;\
	DFLAG=h4`echo $@ | sed -e 's/^h4_//' | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`;\
	if test -e ${srcdir}/h4_$${BASENAME}.c    ;\
	   then DFILE=${srcdir}/h4_$${BASENAME}.c ;\
	   else DFILE=${srcdir}/$${BASENAME}.c    ;\
	fi;\
	if test ${V} ;\
	   then echo "${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}" ;\
	   else echo '    ' GEN $@ ;\
        fi ;\
	${CC} ${CFLAGS} ${SIMD_CFLAGS} ${PTHREAD_CFLAGS} ${CPPFLAGS} ${DEFS} ${MYINCDIRS} ${LDFLAGS} ${MYLIBDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}

distclean: clean
	-rm -f Makefile h4_config.h

clean:
	-rm -f ${PROGS} ${UTESTS} ${STATS} ${BENCHMARKS} ${EXAMPLES} ${EXPERIMENTS} libhmmer.a
	-rm -f *~ *.o TAGS
	-rm -f *.gcno *.gcda *.gcov
	for prog in ${PROGS} ${UTESTS} ${STATS} ${BENCHMARKS} ${EXAMPLES} ${EXPERIMENTS}; do\
	  if test -d $$prog.dSYM; then rm -rf $$prog.dSYM; fi; \
	done
